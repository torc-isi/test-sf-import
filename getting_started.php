<?php 	include('doctype.php');?><html>  <head>    <meta content="text/html; charset=UTF-8" http-equiv="content-type">    <title>Torc: Tools for Open Reconfigurable Computing</title>    <meta name="keywords" content="">    <meta name="description" content="">    <link href="default.css" rel="stylesheet" type="text/css">    <style type="text/css"><!--	@import url("layout.css");-->  </style>  </head>  <body>    <?php 	include('header.php');?> <table align="center" border="0" cellpadding="0" cellspacing="0" width="650">      <tbody>        <tr>          <td width="415"><img src="images/spacer.png" alt="" height="30" width="30"></td>        </tr>        <tr valign="top">          <td>            <table style="width: 100%;" border="0" cellpadding="0" cellspacing="0">              <tbody>                <tr>                  <td>&nbsp;</td>                </tr>                <tr>                  <td class="text4"><img src="images/img4.png" alt="" height="1"                      width="100%">Getting
                    Started<br>                  </td>                </tr>                <tr>                  <td>&nbsp;</td>                </tr>                <tr>                  <td>                    <div style="text-align: left;"> </div>                    To use Torc, it is first necessary to <a class="link2" href="https://sourceforge.net/projects/torc-isi/files/">download</a>                    the virtual machine image, or check out a working copy of                    the Subversion repository, as discussed <a class="link2" href="subversion.php">here</a>.<br>                    <br>                    The virtual machine image is available as an OVA file,                    compatible with VirtualBox, VMware, and other virtualization                    engines.&nbsp; It comes preconfigured with Torc, Boost, and                    GCC, for easy exploration and startup.<br>                    <br>                    <br>                  </td>                </tr>                <tr>                  <td style="vertical-align: top;" class="text4"><img src="images/img4.png"                      alt=""                      height="1"                      width="100%">Requirements</td>                </tr>                <tr>                  <td style="vertical-align: top;"><br>                  </td>                </tr>                <tr>                  <td style="vertical-align: top;">Torc currently has the                    following requirements:<br>                    <br>                    <ul>                      <li><a class="link2" href="http://gcc.gnu.org/releases.html">GCC</a>                        4.2.1 or later</li>                      <li><a class="link2" href="http://www.boost.org/users/history/version_1_42_0">Boost</a>                        1.42 or later<br>                      </li>                      <li>3 GB of disk space (not necessary for user                        executables)<br>                      </li>                    </ul>                    Torc releases are tested under these and other environments:<br>                    <br>                    <ul>                      <li>CentOS 5.6, gcc 4.2.1, Boost 1.42</li>                      <li>OS X 10.6 Server, gcc 4.6.1, Boost 1.46.1</li>                      <li>RHEL (Red Hat) Server 5.7, gcc 4.2.4, Boost 1.42<br>                      </li>                      <li>Ubuntu 10.04.2 LTS, gcc 4.2.1, Boost 1.42</li>                      <li>Windows 7 (Cygwin), gcc 4.5.3, Boost 1.46.1<br>                      </li>                    </ul>                    GCC and Boost must be installed and available before any                    Torc code can be built.&nbsp; If you are working from the                    virtual machine image, these tools are preinstalled.<br>                    <br>                    A full list of tested build configurations can be found <a                      class="link2"                      href="builds.php">here</a>.<br>                    <br>                    <br>                  </td>                </tr>                <tr>                  <td style="vertical-align: top;" class="text4"><img src="images/img4.png"                      alt=""                      height="1"                      width="100%">Building
                    the Code </td>                </tr>                <tr>                  <td style="vertical-align: top;"><br>                  </td>                </tr>                <tr>                  <td style="vertical-align: top; margin-left: 42px;">Torc is                    most easily built in a Linux-like environment.&nbsp; Xcode                    and Eclipse projects are included as a convenience for                    building and exploring the code.<br>                    <br>                    The top-level Makefile resides in the src directory.&nbsp;                    Use the following commands to start the build process:<br>                    <br>                    <div style="margin-left: 40px;">                      <pre>cd src<br>make</pre>                    </div>                    The first time you build Torc you will see a message stating                    that BOOST_INCLUDE_DIR and BOOST_LIB_DIR must be set prior                    to compiling Torc.&nbsp; These can be set on the                    commandline, as environment variables, or editing the                    Makefile.local file that is automatically generated when you                    first type 'make' in the src directory.&nbsp; For issues                    with building Torc see the <a class="link2" href="faq.php">FAQ.</a><br>                    <br>                    These commands will compile and link the unit test                    application and the example executables.&nbsp; All of the                    remaining steps will take place in the src directory.<br>                    <br>                    <br>                    <br>                  </td>                </tr>                <tr>                  <td style="vertical-align: top;" class="text4"><img src="images/img4.png"                      alt=""                      height="1"                      width="100%">Example
                    Executables<br>                  </td>                </tr>                <tr>                  <td style="vertical-align: top;"><br>                  </td>                </tr>                <tr>                  <td style="vertical-align: top;">The <a class="link2" href="examples.php">example
                      executables</a> provide basic demonstrations of the four                    main APIs:&nbsp; Architecture, Bitstream, Generic, and                    Physical.<br>                    <br>                    The Bitstream API example reads a bitstream and writes its                    packets to the console.<br>                    <br>                    <div style="margin-left: 40px;">                      <pre>./BitstreamExample regression/VirtexUnitTest.reference.bit</pre>                    </div>                    <br>                    The Architecture API opens a Virtex6 device, looks up a                    logic site output, and shows all wires that can be driven by                    that output pin.<br>                    <br>                    <div style="margin-left: 40px;">                      <pre>./ArchitectureExample</pre>                    </div>                    <br>                    The Generic API example generates no output on the console,                    but instead changes the INIT property of a LUT                    instance.&nbsp; Perform a diff on the original and modified                    EDIF files to observe the changed INIT property.<br>                    <br>                    <div style="margin-left: 40px;">                      <pre>./GenericExample<br>diff regression/GenericExample.reference.edf regression/GenericExample.generated.edf</pre>                    </div>                    <br>                    The Physical API example reads an XDL file, looks up its                    design root, and writes it back out without any                    modifications:<br>                    <br>                    <div style="margin-left: 40px;">                      <pre>./PhysicalExample regression/DesignUnitTest.reference.xdl</pre>                    </div>                    <br>                    The EDIF obfuscator example reads an EDIF file, replaces                    names with MD5 hashes, and writes out the modified                    file.&nbsp; Ports belonging to the top-level design remain                    unobfuscated.<br>                    <br>                    <div style="margin-left: 40px;">                      <pre>./EdifObfuscator [edif_file]</pre>                    </div>                    <br>                  </td>                </tr>                <tr>                  <td style="vertical-align: top;"><br>                  </td>                </tr>                <tr>                  <td style="vertical-align: top;" class="text4"><img src="images/img4.png"                      alt=""                      height="1"                      width="100%">Sandbox</td>                </tr>                <tr>                  <td style="vertical-align: top;"><br>                  </td>                </tr>                <tr>                  <td style="vertical-align: top;">The example code in                    src/torc/examples is also available in sandbox, where it can                    be built and modified at will:<br>                    <br>                    <div style="margin-left: 40px;">                      <pre>cd sandbox<br>make</pre>                    </div>                    <br>                  </td>                </tr>                <tr>                  <td style="vertical-align: top;"><br>                  </td>                </tr>                <tr>                  <td style="vertical-align: top;" class="text4"><img src="images/img4.png"                      alt=""                      height="1"                      width="100%">Unit
                    Tests<br>                  </td>                </tr>                <tr>                  <td style="vertical-align: top;"><br>                  </td>                </tr>                <tr>                  <td style="vertical-align: top;">Torc uses the Boost.Test                    framework to perform unit testing of classes and                    functions.&nbsp; Some of the unit tests are trivial, while                    others provide good examples of how to work with the various                    parts of Torc.&nbsp; The full collection of unit tests                    currently includes some failing tests, some of which serve                    as deliberate to-do placeholders, but can nonetheless be                    invoked as a partial sanity check for the code.<br>                    <br>                    <div style="margin-left: 40px;">                      <pre>./TorcTest</pre>                    </div>                    <br>                    The following syntax supports invoking specific test suites                    or test cases:<br>                    <br>                    <div style="margin-left: 40px;">                      <pre>./TorcTest -t [test_suite]/[test_case]</pre>                      <pre>./TorcTest -t common/DevicesUnitTest</pre>                    </div>                    <br>                    <br>                  </td>                </tr>                <tr>                  <td style="vertical-align: top;"><br>                  </td>                </tr>              </tbody>            </table>          </td>        </tr>        <tr>          <td><img src="images/spacer.png" alt="" height="20" width="30"></td>        </tr>      </tbody>    </table>    <?php 	include('footer.php');?> </body></html>